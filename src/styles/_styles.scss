@use 'sass:color';
@use 'sass:list';
@use 'vars' as v;
@use 'colors' as c;
@use 'mixins' as m;

body {
  transition: background-color 0.5s linear;
  /* 
  &.programacion {
    background-color: $programacion;
  }
  &.off {
    background-color: transparent;
  } */
}

.icon {
  stroke-width: 1px;
}

figure {
  display: flex;
  flex-flow: column nowrap;
  align-items: flex-end;
  margin-bottom: 10vh;

  img {
    width: 100%;
    height: auto;
    margin-bottom: v.$imgBottom;
    border-radius: 15px;
  }

  figcaption {
    position: relative;
    margin-right: 20px;
    max-width: min(800px, 42%);

    span {
      display: block;
    }
  }

  .icon {
    height: 100%;
    width: auto;
  }

  &.figure-mask {
    position: relative;
    width: 100%;

    svg {
      &.svgMask {
        position: absolute;
        top: 0;
        left: 0;
        height: 0;
        overflow: hidden;
      }
    }

    figcaption {
      div {
        width: auto;
        position: absolute;
        left: 10px;
        height: v.$iconCaption;
        top: (v.$iconCaption + v.$imgBottom) * -1;
      }
    }

    img {
      // clip-path: url(#shape);
      // -webkit-clip-path: url(#shape);
      /* transform: translateZ(0);
      will-change: transform; */
    }
  }
}

[data-scroll-container] {
  position: relative;
  z-index: 100;
  width: 100%;
  height: 100%;
}

.content {
  position: relative;
  z-index: 100;
  width: 100%;
  height: 100%;
  margin: 0 auto;
  padding: 0;
  opacity: 0;
}

main {
  @include m.flexible(column, nowrap, null, center);
}

.intro {
  position: relative;
  width: 100vw;
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
  @include m.flexible(column, nowrap, center, center);
  transition: height 0.8s ease-out;
  margin-bottom: 50vh;
}

.terrainUp {
  pointer-events: none;
  position: absolute;
  width: 100vw;
  height: 180vh;
  left: 0;
  top: 0;
  z-index: 500;
  @include m.flexible(column, nowrap, null, center);
}

.terrain {
  pointer-events: none;
  position: absolute;
  width: 100vw;
  height: 180vh;
  left: 0;
  top: 0;
  z-index: 0;
  @include m.flexible(column, nowrap, null, center);
  opacity: 0;
  transition: background-color 0.5s linear;
  // filter: blur(2px);

  svg {
    width: 100%;
    height: 100%;
  }
}

.terrainIn {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
  width: 100%;
  height: 100%;
  mask-size: cover;
  mask-repeat: no-repeat;
  mask-position: top center;
}

.terrainIn {
  -webkit-mask-size: cover;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: top center;
}

footer {
  width: 100%;
  // height: 400px;
  margin-top: 20vh;
  padding-top: 10vh;
  @include m.flexible(column, nowrap, center, center);

  p {
    font-size: 1.5rem;
    letter-spacing: 50px;
    font-weight: 100;
  }

  img {
    margin-bottom: 5vh;

    &.logo-footer {
      width: 50%;
    }
    &.logo-credits {
      width: 70%;
    }
  }
}

/* ::selection {
  background-color: var(--negro);
  color: var(--blanco);
} */

/* @media (prefers-color-scheme: dark) {
  :root {
    --negro: #ececec;
  }
}

@media (prefers-contrast: high) {
  :root {}
}

@media (prefers-reduced-motion: reduce) {
  * {
    animation: none !important;
    transition: none !important;
  }
} */

section {
  width: 100%;
  max-width: 1140px;
  @include m.flexible(column, nowrap, center, center);
  padding: 0 20px;
  text-align: left;
  position: relative;
}

@mixin repeatGrid($axis, $color, $paperSize: v.$paperWH) {
  background: repeating-linear-gradient(
    $axis,
    $color,
    $color v.$paperLine,
    transparent v.$paperLine,
    transparent $paperSize
  );
}

.curaduria {
  width: 90%;
  max-width: 550px;
  position: relative;
  padding: 50px 80px 50px 50px;
  margin-bottom: 10vh;

  &:after {
    opacity: 1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: -1;
  }

  &:before {
    opacity: 1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: -1;
  }
}

.paper {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: -10;

  &:after {
    opacity: 1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: -5px;
    left: 0;
  }

  &:before {
    opacity: 1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: -5px;
  }
}

@each $eje, $theme in c.$themes {
  .body--#{$eje} {
    background-color: map-get($theme, base);
  }

  .container--#{$eje} {
    color: map-get($theme, text);
    .terrain {
      background-color: map-get($theme, base);
      clip-path: url(#clipPath-#{$eje});
    }

    .terrainIn {
      background-color: color.adjust(map-get($theme, base), $lightness: -8%);
      mask-image: url('../images/terrain-#{$eje}.svg');
    }

    .curaduria {
      &:after {
        @include repeatGrid(
          to right,
          color.adjust(map-get($theme, base), $lightness: -10%),
          calc(v.$paperWH * 5)
        );
      }

      &:before {
        @include repeatGrid(
          to bottom,
          color.adjust(map-get($theme, base), $lightness: -10%),
          calc(v.$paperWH * 5)
        );
      }
    }

    .paper {
      background-color: map-get($theme, base);

      &:after {
        @include repeatGrid(
          to right,
          color.adjust(map-get($theme, base), $lightness: -5%)
        );
      }

      &:before {
        @include repeatGrid(
          to bottom,
          color.adjust(map-get($theme, base), $lightness: -5%)
        );
      }
    }

    footer {
      background-color: color.adjust(map-get($theme, base), $lightness: -20%);
    }
  }
}
